#!/bin/bash
#
#
# 04-09-2023
# start writing functions
#
# 1st, check system type, systemd or sysinitd
#
# 2nd, keep old, while updating how the commands are called. instead of backticks "`", use the now
# excepted "$(command)".
#
# 3rn, use the journalctl from the old script, mod_ssh.sh.systemd for another function
#
# 4th, will have to write these funtions first, orig and mod_..., and the call them from the test
# system type function
#
# 5th, leave the email part of the original script in place, since that won't, hopefully, have to be updated
#
# 6th, have fun :)
#
# 7th, set up what file/var is written to depending on the unit used in journalctl
#
PATH="/usr/local/bin:/usr/bin"

type_init () {
    grep -i Illegal /var/log/auth.log.0 > "bad_sshd" # finding the offenders.
#    grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' "bad_sshd" | sort -u -o ip_sshd
}

#type_sysd () { 
#     journalctl -u sshd.service --no-pager --since -168hours --until today | grep Invalid > bad_sshd
#     if [ $(cat bad_sshd | wc -l) == 0 ]; then
#         journalctl -u ssh.service --no-pager --since -168hours --until today | grep Invalid > bad_sshd
#     fi #
#}

type_sysd () { 
     journalctl -u ssh?.service --no-pager --since -168hours --until today | grep Invalid > bad_sshd
}
ck_sys () {
    while VAR1=$(pstree | head -n1 | cut -d- -f1); do
        if [ "$VAR1" ]; then
            echo "$VAR1"; break
        else
            exit
        fi
    done #
}

#
# look at the grep part of the two files - ssh_abuse/orig.. and mod_ssh/---systemd to make sure that
# it doesn't have to go into the function, or modify it to work with all
